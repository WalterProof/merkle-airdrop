id: merkle-airdrop
type: standalone
configuration: {
	deploys: {
		sandbox: {
      merkle-root: '"4ea4cd9389fa1c4cfd8051d32bd3ee7c898690139a94c32d566f6d55b0ad4447"'
      // FIXME: for sandbox we need some existing FA2
      token-addr: '"KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton"'
      token-id: 0n
			// kind: sandbox-tezos-client

			// requires installed tezos-client
			// kind: tezos-client
			// path: octez-client
			// source: alice
			// burn-cap: 5

			// requires installed js modules
      kind: taquito
      rpc: http://localhost:20000
      source: edsk3QoqBuvdamxouPhin7swCvkQNgq4jP5KZPbwWNnwdZpSpJiEbq
		}
	}
	ligo: {
    global: true
		version: 0.55.0
		// or exact
		// version: 0.50.0
		// or container
		// image: ligolang/ligo:0.49.0
		protocol: kathmandu
		initial-storage-args: ${metadata}, ((${token-addr}: address), ${token-id}), (${merkle-root}: bytes), (Big_map.empty : (address, unit) big_map)
	}
	sandbox: {
		name: flextesa
		// defaults to `sandbox-${id}`
		image: docker.io/oxheadalpha/flextesa:20221026
		script: kathmandubox
		// rpc_port: 20000
	}
	metadata: {
		// source: src/metadata.hjson
		// offchain-views: src/offchain-views.hjson
		// indent: false
		// offchain-view-expression-suffix: _off_chain_view
	}
	compile: {
		//tz: true
		//json: true
	}
	tests: {
		// root: by default looks up all.* in tests directory
		// root: tests/all.mligo
	}
	// usually autodetected
	// containers: {
	//      engine: docker
	// }
}
